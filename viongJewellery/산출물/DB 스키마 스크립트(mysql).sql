--DiscountHunter DB 생성

CREATE DATABASE DiscountHunter; -- DB 생성

CREATE USER 'DiscountHunter'@'%' IDENTIFIED BY 'sudo3565@@'; --계정 생성

GRANT ALL PRIVILEGES ON DiscountHunter.* TO 'DiscountHunter'@'%'; --권한부여

FLUSH PRIVILEGES; -- 권한 즉시 적용


CREATE TABLE CODE (
    CODE VARCHAR(15) PRIMARY KEY COMMENT '코드',
    CODE_NAME VARCHAR(100) NOT NULL COMMENT '코드명',
    UP_CODE VARCHAR(15) COMMENT '상위코드',
    SORT NUMERIC(3) COMMENT '정렬',
    ETC01 VARCHAR(100) COMMENT '기타1',
    ETC02 VARCHAR(100) COMMENT '기타2',
    USE_YN CHAR(1) COMMENT '사용여부'
)COMMENT='공통코드 테이블';



--유저 테이블 생성
CREATE TABLE USER
(
    ID  VARCHAR(20) PRIMARY KEY COMMENT '아이디',
    NAME VARCHAR(20) NOT NULL COMMENT '이름',
    PASSWORD VARCHAR(200) NOT NULL COMMENT '패스워드',
    EMAIL VARCHAR(40) COMMENT '이메일',
    EMAIL_CONSENT BOOLEAN COMMENT '이메일 수신동의',
    JOIN_DATETIME DATETIME  NOT NULL COMMENT '가입일',
    DELETE_DATETIME DATETIME COMMENT '탈퇴일',
    USE_YN BOOLEAN COMMENT '사용유무',
    LOCK_YN BOOLEAN COMMENT '계정잠금',
    PASSWORD_EXPIRED CHAR(1) COMMENT '비밀번호 만료여부',
    PASSWORD_CHG_DATETIME DATETIME COMMENT '마지막 비밀번호 변경일'
)COMMENT='유저';



CREATE TABLE PRODUCT
(
	PRODUCT_SEQ INT AUTO_INCREMENT PRIMARY KEY,
    STORE_CODE VARCHAR(20) COMMENT '편의점',
    NAME VARCHAR(100) COMMENT '상품명',
    TYPE VARCHAR(15) COMMENT '분류',
    IMG_PATH VARCHAR(200) COMMENT '이미지 URL',
    PRICE NUMERIC(10) COMMENT '가격',
    ETC VARCHAR(100) COMMENT '비고'
) COMMENT = '상품';

CREATE TABLE PRODUCT_HISTORY
(
	PRODUCT_SEQ INT,
	INSERTED_DATE DATETIME COMMENT '입력날짜',
    STORE_CODE VARCHAR(20) COMMENT '편의점',
    NAME VARCHAR(100) COMMENT '상품명',    
    TYPE VARCHAR(15) COMMENT '분류',
    IMG_PATH VARCHAR(200) COMMENT '이미지 URL',
    PRICE NUMERIC(10) COMMENT '가격',
    ETC VARCHAR(100) COMMENT '비고',
    PRIMARY KEY (PRODUCT_SEQ,INSERTED_DATE),
    CONSTRAINT FK_PRODUCT_HISTORY FOREIGN KEY (PRODUCT_SEQ)
      REFERENCES PRODUCT(PRODUCT_SEQ)
) COMMENT = '상품이력';


--히스토리 백업 트리거 (admin 권한 필요)
DROP TRIGGER IF EXISTS after_product_insert;


DELIMITER //

CREATE TRIGGER after_product_insert
AFTER INSERT ON PRODUCT
FOR EACH ROW
BEGIN
    INSERT INTO PRODUCT_HISTORY (PRODUCT_SEQ,INSERTED_DATE,STORE_CODE, NAME,TYPE, IMG_PATH, PRICE, ETC)
    VALUES (NEW.PRODUCT_SEQ,NOW(),NEW.STORE_CODE, NEW.NAME,NEW.TYPE, NEW.IMG_PATH, NEW.PRICE, NEW.ETC);
END//

DELIMITER ;




CREATE TABLE PRODUCT_PROMOTION
(
	PRODUCT_SEQ INT,
	PROMOTION_TYPE_CODE VARCHAR(15) COMMENT '행사종류',
    PRIMARY KEY (PRODUCT_SEQ,PROMOTION_TYPE_CODE),
    CONSTRAINT FK_PRODUCT_PROMOTION FOREIGN KEY (PRODUCT_SEQ)
      REFERENCES PRODUCT(PRODUCT_SEQ)
) COMMENT = '상품';



CREATE TABLE PRODUCT_PROMOTION_HISTORY
(
	PRODUCT_SEQ INT,
    PROMOTION_TYPE_CODE VARCHAR(15) COMMENT '행사종류',
    INSERTED_DATE DATE COMMENT '입력날짜',
    PRIMARY KEY (PRODUCT_SEQ,PROMOTION_TYPE_CODE,INSERTED_DATE),
    CONSTRAINT FK_PRODUCT_PROMOTION__HISTORY FOREIGN KEY (PRODUCT_SEQ)
      REFERENCES PRODUCT(PRODUCT_SEQ)
) COMMENT = '상품';

--행사상품 히스토리 백업 트리거 (admin 권한 필요)
DELIMITER //

CREATE TRIGGER after_product_promotion_insert
AFTER INSERT ON PRODUCT_PROMOTION
FOR EACH ROW
BEGIN
    INSERT INTO PRODUCT_PROMOTION_HISTORY (PRODUCT_SEQ,PROMOTION_TYPE_CODE,INSERTED_DATE)
    VALUES (NEW.PRODUCT_SEQ,NEW.PROMOTION_TYPE_CODE, NOW());
END//

DELIMITER ;